import sys

# Словарь - неупорядоченная коллекция произвольных объектов с доступом по ключу.
# Cловари не поддерживают какого-то определённого порядка для своих ключей.
# Словари, так же как и списки, хранят ссылки на объекты, а не сами объекты.

# Создание пустого словаря.
my_dict = {}
my_dict = dict()

# Создание словаря с данными.
my_dict = {
    'first_key': 'first_value',
    'second_key': 'second_value'
}

my_dict = dict(first_key = 'first_value', second_key = 'second_value')

# Доступ к элементам словаря осуществляется по ключу.
first_key = my_dict['first_key']

# В словарях в качестве ключей могут использоваться только неизменяемые объекты (как строки).
# first_key = list('first_key') - вызовет ошибку 

# my_dict = {
#     first_key: 'first_value',
#     'second_key': 'second_value'
# }

# Cловарь – это изменяемый тип данных.
my_dict['first_key'] = 'other_value'

# Словари гетерогенны.
my_dict = {
    'first_key': 123,
    'second_key': 'second_value'
}

# Время вставки для словаря O(1).
my_dict['first_key'] = 'other_value'

# Время изъятия для словаря O(1).
key = my_dict['first_key']

# Время проверки, есть ли с словаре данный ключ или нет, тоже O(1).
dict_key = 'first_key'
dict_key in my_dict # Вернёт True.


# Размер пустого словаря в моей 64-разрядной Ubuntu составляет 240 байт.
my_dict = dict()
sys.getsizeof(my_dict)


# Если вам нужна коллекция с доступом по ключу — словарь подходит для этого лучше всего. 
# Если вам нужна коллекция для хранения произвольных объектов произвольной вложенности — словарь в этом вам поможет.

'''

Эффективность операций над словарями в Python в терминах нотации “большое О”.

операция	        эффективность

копирование	        O(n)
получить элемент	O(1)
записать элемент	O(1)
удалить элемент	    O(1)
вхождение (in)	    O(1)
итерация	        O(n)

'''

